version: '3.8'

services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: ecommerce-mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'echo > /dev/tcp/localhost/1433'"]
      interval: 15s
      timeout: 5s
      retries: 10
    networks:
      - ecommerce-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ecommerce-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - ecommerce-net

  auth:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    container_name: ecommerce-auth
    environment:
      - ASPNETCORE_URLS=http://+:5001
      - DOTNET_ENVIRONMENT=Development
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - RABBITMQ__HOST=rabbitmq
      - RABBITMQ__USER=${RABBITMQ_USER}
      - RABBITMQ__PASS=${RABBITMQ_PASS}
      - ConnectionStrings__Default=Server=mssql,1433;Database=${AUTH_DB};User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True;
    ports:
      - "5001:5001"
    depends_on:
      mssql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - ecommerce-net

  inventory:
    build:
      context: ./InventoryService
      dockerfile: Dockerfile
    container_name: ecommerce-inventory
    environment:
      - ASPNETCORE_URLS=http://+:5002
      - DOTNET_ENVIRONMENT=Development
      - ConnectionStrings__Default=Server=mssql,1433;Database=${INVENTORY_DB};User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True;
      - JWT_SECRET=${JWT_SECRET}
      - RABBITMQ__HOST=rabbitmq
      - RABBITMQ__USER=${RABBITMQ_USER}
      - RABBITMQ__PASS=${RABBITMQ_PASS}
    ports:
      - "5002:5002"
    depends_on:
      mssql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - ecommerce-net

  orders:
    build:
      context: ./OrdersService
      dockerfile: Dockerfile
    container_name: ecommerce-orders
    environment:
      - ASPNETCORE_URLS=http://+:5003
      - DOTNET_ENVIRONMENT=Development
      - ConnectionStrings__Default=Server=mssql,1433;Database=${ORDERS_DB};User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True;
      - JWT_SECRET=${JWT_SECRET}
      - INVENTORY_URL=http://inventory:5002
      - RABBITMQ__HOST=rabbitmq
      - RABBITMQ__USER=${RABBITMQ_USER}
      - RABBITMQ__PASS=${RABBITMQ_PASS}
    ports:
      - "5003:5003"
    depends_on:
      mssql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      inventory:
        condition: service_started
    networks:
      - ecommerce-net

  gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: ecommerce-gateway
    environment:
      - ASPNETCORE_URLS=http://+:${GATEWAY_PORT}
      - DOTNET_ENVIRONMENT=Development
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      auth:
        condition: service_started
      inventory:
        condition: service_started
      orders:
        condition: service_started
    networks:
      - ecommerce-net

networks:
  ecommerce-net:
    driver: bridge